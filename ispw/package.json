{
	"name": "ispw",
	"displayName": "ISPW",
	"description": "ISPW - Visual Studio Code Extension ",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.52.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:ispw.buildExplorer",
		"onCommand:ispw.generateExplorer",
		"onCommand:ispw.loadExplorer",
		"onCommand:ispw.buildEditor",
		"onCommand:ispw.generateEditor",
		"onCommand:ispw.loadEditor",
		"onCommand:ispw.clearCreds"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "ISPW",
			"properties": {
				"ispw.Assignment Description": {
					"type": "string",
					"default": null,
					"scope": "machine",
					"description": "The description to give assignments created by ISPW actions."
				},
				"ispw.Level": {
					"type": "string",
					"default": null,
					"scope": "machine",
					"description": "The level to use in the ISPW life cycle."
				},
				"ispw.Topaz CLI Installation Path": {
					"type": "string",
					"default": null,
					"scope": "user",
					"description": "File path of the Topaz CLI Installation folder."
				},
				"ispw.YAML Mapping File": {
					"type": "string",
					"default": "\\ispwconfig.yml",
					"scope": "resource",
					"description": "File path of the .yml mapping file."
				}
			}
		},
		"commands": [
			{
				"command": "ispw.buildExplorer",
				"title": "ISPW: Build"
			},
			{
				"command": "ispw.generateExplorer",
				"title": "ISPW: Generate"
			},
			{
				"command": "ispw.loadExplorer",
				"title": "ISPW: Load"
			},
			{
				"command": "ispw.buildEditor",
				"title": "ISPW: Build"
			},
			{
				"command": "ispw.generateEditor",
				"title": "ISPW: Generate"
			},
			{
				"command": "ispw.loadEditor",
				"title": "ISPW: Load"
			},
			{
				"command": "ispw.clearCreds",
				"title": "ISPW: Clear Stored Credentials"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "ispw.buildExplorer",
					"when": "false"
				},
				{
					"command": "ispw.generateExplorer",
					"when": "false"
				},
				{
					"command": "ispw.loadExplorer",
					"when": "false"
				},
				{
					"command": "ispw.buildEditor",
					"when": "true"
				},
				{
					"command": "ispw.generateEditor",
					"when": "true"
				},
				{
					"command": "ispw.loadEditor",
					"when": "true"
				},
				{
					"command": "ispw.clearCreds",
					"when": "true"
				}
			],
			"explorer/context": [
				{
					"command": "ispw.buildExplorer",
					"when": "!explorerResourceIsFolder"
				},
				{
					"command": "ispw.generateExplorer",
					"when": "!explorerResourceIsFolder"
				},
				{
					"command": "ispw.loadExplorer",
					"when": "!explorerResourceIsFolder"
				}
			],
			"editor/context": [
				{
					"command": "ispw.buildEditor",
					"when": "editorTextFocus && !editorReadonly"
				},
				{
					"command": "ispw.generateEditor",
					"when": "editorTextFocus && !editorReadonly"
				},
				{
					"command": "ispw.loadEditor",
					"when": "editorTextFocus && !editorReadonly"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "mocha ./out/test/**/*.test.js --recursive --check-leaks",
		"posttest": "npx typedoc src",
		"coverage": "nyc -r lcov -e .ts -x \"*.test.ts\" npm run test"
	},
	"devDependencies": {
		"@types/chai": "^4.2.14",
		"@types/glob": "^7.1.3",
		"@types/js-yaml": "^4.0.0",
		"@types/mocha": "^8.2.0",
		"@types/node": "^12.11.7",
		"@types/tmp": "^0.2.0",
		"@types/vscode": "^1.52.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"chai": "^4.2.0",
		"eslint": "^7.15.0",
		"glob": "^7.1.6",
		"js-yaml": "^4.0.0",
		"mocha": "^8.2.1",
		"nyc": "^15.1.0",
		"tape": "^5.1.1",
		"tmp": "^0.2.1",
		"ts-node": "^9.1.1",
		"typedoc": "^0.20.16",
		"typescript": "^4.1.3",
		"vsce": "^1.85.0",
		"vscode-test": "^1.4.1",
		"ws": "^7.4.2"
	},
	"dependencies": {}
}
